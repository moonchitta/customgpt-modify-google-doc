openapi: 3.1.0
info:
  title: Google Drive, Slack Integration API and ElevenLabs
  version: 1.0.0
  description: API to integrate Google Drive functionality, Slack messaging and ElevanLabs to generate Speech based on the Text
servers:
  - url: https://48c3-2407-d000-1a-8ad4-ad85-aa2a-1087-948e.ngrok-free.app
    description: Development server
paths:
  /privacy:
    get:
      summary: Returns the privacy policy
      operationId: getPrivacyPolicy
      responses:
        '200':
          description: Privacy policy returned successfully.
          content:
            text/html:
              schema:
                type: string

  /list_channels:
    get:
      summary: List all Slack channels
      operationId: listSlackChannels
      responses:
        '200':
          description: List of channels retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  channels:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
        '500':
          description: Error retrieving channels.

  /startAuth:
    get:
      summary: Start Google Drive authentication
      operationId: startGoogleDriveAuth
      responses:
        '200':
          description: Authentication URL provided successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  auth_url:
                    type: string

  /handleAuth:
    get:
      summary: Handle Google Drive authentication response
      operationId: handleGoogleDriveAuth
      responses:
        '200':
          description: Authentication successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /listFiles:
    get:
      summary: List Google Docs-compatible files
      operationId: listGoogleDriveFiles
      responses:
        '200':
          description: List of Google Docs-compatible files retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  files:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        mimeType:
                          type: string
        '500':
          description: Error retrieving files.

  /readDoc:
    get:
      summary: Read content from a Google Docs file
      operationId: readGoogleDoc
      parameters:
        - name: document_id
          in: query
          required: true
          schema:
            type: string
          description: ID of the Google Docs file.
      responses:
        '200':
          description: File content retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: string
        '400':
          description: Document ID is missing or invalid.
        '500':
          description: Error reading the document.

  /updateDoc:
    post:
      summary: Update a Google Docs file
      operationId: updateGoogleDoc
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                document_id:
                  type: string
                content:
                  type: string
                location_index:
                  type: integer
                  default: 1
      responses:
        '200':
          description: Document updated successfully.
        '400':
          description: Missing or invalid input data.
        '500':
          description: Error updating the document.

  /shareFileOnSlack:
    post:
      summary: Share a Google Drive document on Slack
      operationId: shareDriveFileOnSlack
      requestBody:
        description: Information required to share a Google Drive document on Slack
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channel_id:
                  type: string
                  description: The ID of the Slack channel to share the file link in
                  example: C12345678
                document_id:
                  type: string
                  description: The ID of the Google Drive document
                  example: 1aBcDeFgHiJkLmNoPqRsTuVwXyZ
                comment:
                  type: string
                  description: Optional comment to include with the file link
                  example: "Check out this document"
      responses:
        '200':
          description: Google Drive file link shared successfully on Slack
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  message_id:
                    type: string
                    description: The Slack message timestamp
                    example: "1627382910.000200"
                  public_url:
                    type: string
                    description: The public URL of the Google Drive document
                    example: https://drive.google.com/file/d/1aBcDeFgHiJkLmNoPqRsTuVwXyZ/view
                  message:
                    type: string
                    description: A success message
                    example: "Google Drive file link shared successfully"
        '400':
          description: Missing or invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: false
                  error:
                    type: string
                    description: Error message
                    example: "channel_id and document_id are required"
        '500':
          description: Error encountered while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: false
                  error:
                    type: string
                    description: Error message
                    example: "Slack error: some error message"
  /shareFileAsAttachmentOnSlack:
    post:
      summary: Upload a Google Drive file as an attachment to Slack
      operationId: uploadDriveFileAsSlackAttachment
      requestBody:
        description: Information required to upload a Google Drive file as an attachment to Slack
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channel_id:
                  type: string
                  description: The ID of the Slack channel to upload the file to
                  example: C12345678
                document_id:
                  type: string
                  description: The ID of the Google Drive document
                  example: 1aBcDeFgHiJkLmNoPqRsTuVwXyZ
                comment:
                  type: string
                  description: Optional comment to include with the file
                  example: "Here is the file as requested!"
      responses:
        '200':
          description: Google Drive file uploaded successfully to Slack as an attachment
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  file_id:
                    type: string
                    description: The Slack file ID
                    example: "F1234567890"
                  message:
                    type: string
                    description: Success message
                    example: "File uploaded to Slack channel successfully."
        '400':
          description: Missing or invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: false
                  error:
                    type: string
                    description: Error message
                    example: "channel_id and document_id are required."
        '500':
          description: Error encountered while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: false
                  error:
                    type: string
                    description: Error message
                    example: "Google Drive error: some error message"
  /generate-audio:
    post:
      operationId: generateAudioFromText
      summary: Generate Audio from Text
      description: Accepts a text prompt, sends it to ElevenLabs API, and returns the generated audio file URL.
      requestBody:
        required: true
        description: JSON payload containing the text to be converted into speech.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateAudioRequest'
      responses:
        '200':
          description: Audio file generated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Audio file generated successfully."
                  file_url:
                    type: string
                    format: uri
                    example: "http://127.0.0.1:5000/audio/output.mp3"
        '400':
          description: Bad request. Text input is missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error or API failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /audio/{filename}:
    get:
      operationId: serveAudioFile
      summary: Retrieve an audio file
      description: Serves an audio file by its filename from the audio_outputs folder.
      parameters:
        - name: filename
          in: path
          required: true
          description: Name of the audio file to retrieve.
          schema:
            type: string
            example: "output.mp3"
      responses:
        '200':
          description: Audio file retrieved successfully.
          content:
            audio/mpeg:
              schema:
                type: string
                format: binary
        '404':
          description: File not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /scrape:
    post:
      operationId: startScraping
      summary: Start a website scraping task
      description: Starts a background task to scrape a website and save its pages to a Google Drive folder.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - url
                - folder_id
              properties:
                url:
                  type: string
                  format: uri
                  description: The base URL of the website to start scraping.
                  example: https://example.com
                max_pages:
                  type: integer
                  description: The maximum number of pages to scrape. Use -1 for all pages.
                  default: -1
                  example: 5
                folder_id:
                  type: string
                  description: The Google Drive folder ID where the HTML files will be saved.
                  example: "1A2B3C4D5E6F7G8H"
      responses:
        "200":
          description: Scraping task successfully started.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Scraping task started.
                  data:
                    type: object
                    properties:
                      task_id:
                        type: string
                        format: uuid
                        example: 123e4567-e89b-12d3-a456-426614174000
        "400":
          description: Invalid input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Invalid input
        "500":
          description: Selenium or Google Drive initialization error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Selenium or Google Drive not initialized.

  /status/{task_id}:
    get:
      operationId: checkScrapingStatus
      summary: Check the status of a scraping task
      description: Retrieves the current status and result of a scraping task using its unique task ID.
      parameters:
        - name: task_id
          in: path
          required: true
          description: The unique task ID returned when the scraping task was started.
          schema:
            type: string
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174000
      responses:
        "200":
          description: Task status retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: completed
                  message:
                    type: string
                    example: Scraped 5 pages.
                  data:
                    oneOf:
                      - type: "null"
                      - type: array
                        description: List of Google Drive file links for the saved HTML pages.
                        items:
                          type: string
                          format: uri
                          example: https://drive.google.com/file/d/FILE_ID/view
        "404":
          description: Task ID not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Invalid task ID
        "500":
          description: Server error while retrieving task status.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: An unexpected error occurred.
  /getContacts:
    post:
      summary: Retrieve a contact
      operationId: getContacts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ContactId:
                  type: string
                  description: Unique ContactId to fetch the contact.
                  example: "people/c1234567890"
                query:
                  type: string
                  description: Query to search for a contact by name or email.
                  example: "John Doe"
      responses:
        "200":
          description: Contact retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  resourceName:
                    type: string
                    example: "people/c1234567890"
                  names:
                    type: array
                    items:
                      type: object
                      properties:
                        displayName:
                          type: string
                          example: "John Doe"
                  emailAddresses:
                    type: array
                    items:
                      type: object
                      properties:
                        value:
                          type: string
                          example: "johndoe@example.com"
        "400":
          description: Invalid request input.
        "404":
          description: Contact not found.
        "500":
          description: Failed to fetch contact.
  /createContact:
    post:
      summary: Create a new contact
      operationId: createContact
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
              properties:
                name:
                  type: string
                  description: Full name of the contact.
                  example: "John Doe"
                email:
                  type: string
                  format: email
                  description: Email address of the contact.
                  example: "johndoe@example.com"
                phone:
                  type: string
                  description: Mobile phone number.
                  example: "+1234567890"
                workPhone:
                  type: string
                  description: Work phone number.
                  example: "+0987654321"
                company:
                  type: string
                  description: Company name of the contact.
                  example: "Tech Solutions Ltd."
                position:
                  type: string
                  description: Position or job title.
                  example: "Senior Developer"
      responses:
        "201":
          description: Contact created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Contact created successfully"
                  ContactId:
                    type: string
                    example: "people/c1234567890"
        "400":
          description: Missing required fields.
        "500":
          description: Failed to create contact.
  /updateContact:
    post:
      summary: Update an existing contact
      operationId: updateContact
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ContactId
              properties:
                ContactId:
                  type: string
                  description: Unique ContactId of the contact to update.
                  example: "people/c1234567890"
                name:
                  type: string
                  description: Updated full name of the contact.
                  example: "Jane Doe"
                email:
                  type: string
                  format: email
                  description: Updated email address.
                  example: "janedoe@example.com"
                phone:
                  type: string
                  description: Updated mobile phone number.
                  example: "+9876543210"
      responses:
        "200":
          description: Contact updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Contact updated successfully"
                  ContactId:
                    type: string
                    example: "people/c1234567890"
        "400":
          description: ContactId is missing or invalid.
        "404":
          description: Contact not found.
        "500":
          description: Failed to update contact.
  /deleteContact:
    POST:
      summary: Delete a contact
      operationId: deleteContact
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ContactId
              properties:
                ContactId:
                  type: string
                  description: Unique ContactId of the contact to delete.
                  example: "people/c1234567890"
      responses:
        "200":
          description: Contact deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Contact deleted successfully"
                  ContactId:
                    type: string
                    example: "people/c1234567890"
        "400":
          description: ContactId is missing or invalid.
        "404":
          description: Contact not found.
        "500":
          description: Failed to delete contact.
components:
  schemas:
    GenerateAudioRequest:
      type: object
      properties:
        text:
          type: string
          description: The text input to be converted into speech.
          example: "Hello, this is a test audio."
      required:
        - text
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "No text provided."
        details:
          type: string
          example: "Failed to process the request."